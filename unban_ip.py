#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ IP –∞–¥—Ä–µ—Å–æ–≤
"""

import sys
import argparse
from core.security.rate_limiter import rate_limiter

def unban_ip(ip: str) -> bool:
    """–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ IP –∞–¥—Ä–µ—Å–∞"""
    success = rate_limiter.unban_ip(ip)
    if success:
        print(f"‚úÖ IP {ip} —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ IP {ip}")
    return success

def list_banned_ips():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö IP"""
    banned_ips = rate_limiter.get_banned_ips()
    if banned_ips:
        print(f"üìã –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ IP –∞–¥—Ä–µ—Å–∞ ({len(banned_ips)}):")
        for ip in banned_ips:
            print(f"  - {ip}")
    else:
        print("‚úÖ –ù–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö IP –∞–¥—Ä–µ—Å–æ–≤")

def main():
    parser = argparse.ArgumentParser(description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π IP –∞–¥—Ä–µ—Å–æ–≤")
    parser.add_argument("--list", action="store_true", help="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö IP")
    parser.add_argument("--unban", type=str, help="–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å IP –∞–¥—Ä–µ—Å")
    parser.add_argument("--unban-all", action="store_true", help="–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ IP –∞–¥—Ä–µ—Å–∞")
    
    args = parser.parse_args()
    
    if args.list:
        list_banned_ips()
    elif args.unban:
        unban_ip(args.unban)
    elif args.unban_all:
        banned_ips = rate_limiter.get_banned_ips()
        if banned_ips:
            print(f"üîÑ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ {len(banned_ips)} IP –∞–¥—Ä–µ—Å–æ–≤...")
            for ip in banned_ips:
                unban_ip(ip)
            print("‚úÖ –í—Å–µ IP –∞–¥—Ä–µ—Å–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã")
        else:
            print("‚úÖ –ù–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö IP –∞–¥—Ä–µ—Å–æ–≤")
    else:
        parser.print_help()

if __name__ == "__main__":
    main() 