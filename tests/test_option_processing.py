#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–ø—Ü–∏–π
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from core.database.requests import extract_option_code, clean_option_title

def test_option_processing():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–ø—Ü–∏–π"""
    
    test_cases = [
        {
            "input": "AZT - –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è –õ–ö–ü / –ø–æ–∏—Å–∫ –∫–æ–¥–∞ —Ü–≤–µ—Ç–∞",
            "expected_code": "AZT",
            "expected_title": "–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è –õ–ö–ü / –ø–æ–∏—Å–∫ –∫–æ–¥–∞ —Ü–≤–µ—Ç–∞"
        },
        {
            "input": "ABC - –¢–µ—Å—Ç–æ–≤–∞—è –æ–ø—Ü–∏—è",
            "expected_code": "ABC", 
            "expected_title": "–¢–µ—Å—Ç–æ–≤–∞—è –æ–ø—Ü–∏—è"
        },
        {
            "input": "XYZ123 - –î—Ä—É–≥–∞—è –æ–ø—Ü–∏—è —Å —Ü–∏—Ñ—Ä–∞–º–∏",
            "expected_code": "XYZ123",
            "expected_title": "–î—Ä—É–≥–∞—è –æ–ø—Ü–∏—è —Å —Ü–∏—Ñ—Ä–∞–º–∏"
        },
        {
            "input": "–ü—Ä–æ—Å—Ç–∞—è –æ–ø—Ü–∏—è –±–µ–∑ –∫–æ–¥–∞",
            "expected_code": "",
            "expected_title": "–ü—Ä–æ—Å—Ç–∞—è –æ–ø—Ü–∏—è –±–µ–∑ –∫–æ–¥–∞"
        },
        {
            "input": "ABC - –û–ø—Ü–∏—è —Å ABC –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ —Ç–µ–∫—Å—Ç–∞",
            "expected_code": "ABC",
            "expected_title": "–û–ø—Ü–∏—è —Å ABC –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ —Ç–µ–∫—Å—Ç–∞"
        }
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–ø—Ü–∏–π")
    print("=" * 60)
    
    for i, test_case in enumerate(test_cases, 1):
        input_text = test_case["input"]
        expected_code = test_case["expected_code"]
        expected_title = test_case["expected_title"]
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–æ–¥–∞
        extracted_code = extract_option_code(input_text)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—á–∏—Å—Ç–∫—É –∑–∞–≥–æ–ª–æ–≤–∫–∞
        cleaned_title = clean_option_title(input_text)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        code_ok = extracted_code == expected_code
        title_ok = cleaned_title == expected_title
        
        status = "‚úÖ" if code_ok and title_ok else "‚ùå"
        
        print(f"{status} –¢–µ—Å—Ç {i}:")
        print(f"   –í—Ö–æ–¥: '{input_text}'")
        print(f"   –ö–æ–¥: '{extracted_code}' (–æ–∂–∏–¥–∞–ª–æ—Å—å: '{expected_code}')")
        print(f"   –ó–∞–≥–æ–ª–æ–≤–æ–∫: '{cleaned_title}' (–æ–∂–∏–¥–∞–ª–æ—Å—å: '{expected_title}')")
        print()
    
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_option_processing() 