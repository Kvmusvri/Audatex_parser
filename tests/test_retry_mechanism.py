import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

import asyncio
import json
from unittest.mock import Mock, patch
from core.queue.queue_processor import QueueProcessor
from core.queue.redis_manager import RedisQueueManager

async def test_retry_mechanism():
    """–¢–µ—Å—Ç –º–µ—Ö–∞–Ω–∏–∑–º–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫"""
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
    test_request = {
        "claim_number": "12345",
        "vin_number": "ABC123",
        "svg_collection": True,
        "username": "test_user",
        "password": "test_pass"
    }
    
    # –ú–æ–∫–∞–µ–º Redis
    with patch('core.queue.redis_manager.redis.Redis') as mock_redis:
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–æ–∫ Redis
        mock_redis_instance = Mock()
        mock_redis.from_url.return_value = mock_redis_instance
        mock_redis_instance.ping.return_value = True
        mock_redis_instance.hget.return_value = "0"  # –ù–∞—á–∞–ª—å–Ω—ã–π —Å—á–µ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        mock_redis_instance.hset.return_value = True
        mock_redis_instance.lpush.return_value = True
        mock_redis_instance.hdel.return_value = True
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã
        redis_manager = RedisQueueManager()
        processor = QueueProcessor()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–∫–∏ –ø–∞—Ä—Å–µ—Ä–∞
        print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ö–∞–Ω–∏–∑–º retry...")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –ø–∞—Ä—Å–µ—Ä–∞
        await processor._handle_parser_error(test_request, "–¢–∞–±–ª–∏—Ü–∞ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å
        mock_redis_instance.lpush.assert_called_once()
        
        print("‚úÖ –¢–µ—Å—Ç –º–µ—Ö–∞–Ω–∏–∑–º–∞ retry –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("üìä –ó–∞—è–≤–∫–∞ –±—ã–ª–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏")

if __name__ == "__main__":
    asyncio.run(test_retry_mechanism()) 