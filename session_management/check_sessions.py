#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö —Å–µ—Å—Å–∏–π
"""

import asyncio
from core.database.models import async_session, UserSession, User
from sqlalchemy import select
from datetime import datetime

async def check_sessions():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö —Å–µ—Å—Å–∏–π"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö —Å–µ—Å—Å–∏–π...")
    
    try:
        async with async_session() as session:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏
            result = await session.execute(
                select(UserSession).where(UserSession.expires_at > datetime.utcnow())
            )
            active_sessions = result.scalars().all()
            
            print(f"üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π: {len(active_sessions)}")
            
            for s in active_sessions:
                # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                user_result = await session.execute(
                    select(User).where(User.id == s.user_id)
                )
                user = user_result.scalar_one_or_none()
                
                if user:
                    print(f"  - ID: {s.id}, User: {user.username}, Expires: {s.expires_at}")
                else:
                    print(f"  - ID: {s.id}, User: {s.user_id} (–Ω–µ –Ω–∞–π–¥–µ–Ω), Expires: {s.expires_at}")
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–µ—Å—Å–∏–∏ (–≤–∫–ª—é—á–∞—è –∏—Å—Ç–µ–∫—à–∏–µ)
            result = await session.execute(select(UserSession))
            all_sessions = result.scalars().all()
            
            print(f"\nüìä –í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π –≤ –ë–î: {len(all_sessions)}")
            
            if len(all_sessions) > len(active_sessions):
                print("‚ö†Ô∏è  –ï—Å—Ç—å –∏—Å—Ç–µ–∫—à–∏–µ —Å–µ—Å—Å–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ—á–∏—Å—Ç–∏—Ç—å")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(check_sessions()) 